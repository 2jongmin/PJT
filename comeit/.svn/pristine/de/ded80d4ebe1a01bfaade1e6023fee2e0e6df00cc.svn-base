apply plugin: 'java'
apply plugin: 'war'
apply plugin: 'eclipse-wtp'

sourceCompatibility = 1.8
version = '1.0'

// logback(slf4j)를 사용하기 때문에 모든 의존성에서 commons-logging는 제외
// commons-logging-xxx.jar 파일을 Maven에서 내려받지 않기 때문에 runtime 시 오류가 난다.
[configurations.runtime, configurations.default]*.exclude( module: 'commons-logging' )

// JAVA 컴파일시 인코딩 설정
[compileJava, compileTestJava]*.options*.encoding = 'UTF-8'

def projectName = "comeit"

eclipse {
    wtp {
        component {
            contextPath = project.name
        }
        facet {
            facet name: 'jst.web', version: '3.1'
            facet name: 'jst.java', version: '1.8'
            facet name: 'wst.jsdt.web', version: '1.0'
        }
    }
}

jar {
    manifest {
        attributes 'Implementation-Title': 'Gradle Quickstart',
                   'Implementation-Version': version
    }
}

//디폴트 패키징
final String DEFAULT_PROFILE = 'local'

// 빌드시(gradle -Pprofile=local or dev or real)
allprojects {
    def srcDir
    if(!project.hasProperty("profile") || !profile) {
        ext.profile = DEFAULT_PROFILE
        srcDir = ["src/main/resources", "src/main/resources-local", "src/main/resources-dev", "src/main/resources-real"]
    } else {
        srcDir = ["src/main/resources", "src/main/resources-$profile"]
    }

    println "srcDirs : $srcDir"
    
    sourceSets {
        main {
            resources {
                srcDirs = srcDir
            }
        }
    }
}

// 이클립스 classpath의 resources 디렉토리 설정
eclipse.classpath.file {
    // Classpath entry for Eclipse which changes the order of classpathentries; otherwise no sources for 3rd party jars are shown
    withXml { xml ->
        def node = xml.asNode()
        println node
        node.eachWithIndex{ obj, index ->
            if(obj.@path.indexOf('src/main/resources') > -1) {
                obj.@excluding = '**'
            }
        }
    }
}

repositories {
    mavenCentral()
}

def version = [
    jstl : "1.2",
    jsp : "2.2",
    servlet : "3.1.0",
    taglibs : "1.1.2",
    websocket : "1.1",
    spring : "4.2.5.RELEASE",
    springSecurity : "4.0.4.RELEASE",
    springOauth2 : "2.0.9.RELEASE",
    cglib : "3.2.2",
    mariaDb : "1.4.0",
    mysql : "5.1.31",
    mybatisSpring : "1.3.0",
    mybatis : "3.4.0",
    aspectj : "1.8.9",
    logback : "1.1.7",
    slf4j : "1.7.21",
    jackson : "2.7.3",
    sitemesh : "3.0.1",
    tiles : "3.0.5"
]

def libs = [
    "servlet" : [
        "javax.servlet:javax.servlet-api:${version.servlet}",
    ],
    "web" : [
        "javax.servlet:jstl:${version.jstl}",
        "taglibs:standard:${version.taglibs}"
    ],
    "spring" : [
        "org.springframework:spring-core:${version.spring}",
        "org.springframework:spring-beans:${version.spring}",
        "org.springframework:spring-context:${version.spring}",
        "org.springframework:spring-context-support:${version.spring}",
        "org.springframework:spring-webmvc:${version.spring}",
        "org.springframework:spring-tx:${version.spring}",
        "org.springframework:spring-aop:${version.spring}",
        "org.springframework:spring-oxm:${version.spring}",
        "org.springframework:spring-jdbc:${version.spring}",
        "org.springframework:spring-websocket:${version.spring}",
        "org.springframework.security:spring-security-core:${version.springSecurity}",
        "org.springframework.security:spring-security-web:${version.springSecurity}",
        "org.springframework.security:spring-security-config:${version.springSecurity}",
        "org.springframework.security.oauth:spring-security-oauth2:${version.springOauth2}",
        "org.springframework.social:spring-social-facebook:1.1.1.RELEASE",
        "cglib:cglib:${version.cglib}",
        "org.aspectj:aspectjrt:${version.aspectj}",
        "org.aspectj:aspectjweaver:${version.aspectj}"
    ],
    "database" : [
        "org.mariadb.jdbc:mariadb-java-client:${version.mariaDb}",
        "org.mybatis:mybatis-spring:${version.mybatisSpring}",
        "org.mybatis:mybatis:${version.mybatis}",
        "mysql:mysql-connector-java:${version.mysql}"
    ],
    "logging" : [
        "ch.qos.logback:logback-core:${version.logback}",
        "ch.qos.logback:logback-classic:${version.logback}",
        "org.slf4j:jcl-over-slf4j:${version.slf4j}",
        "org.lazyluke:log4jdbc-remix:0.2.7"
    ],
    "json" : [
        "com.fasterxml.jackson.core:jackson-core:${version.jackson}",
        "com.fasterxml.jackson.core:jackson-databind:${version.jackson}",
        "com.fasterxml.jackson.core:jackson-annotations:${version.jackson}"
    ],
    "apacheCommons" : [
        'org.apache.commons:commons-dbcp2:2.1.1',
        "commons-io:commons-io:2.4",
        "commons-lang:commons-lang:2.6",
        "org.apache.commons:commons-email:1.4",
        "commons-fileupload:commons-fileupload:1.3.1",
        "commons-beanutils:commons-beanutils:1.9.2",
        "commons-codec:commons-codec:1.10",
        "org.apache.httpcomponents:httpclient:4.5.2"
    ],
    "view" : [
        "org.sitemesh:sitemesh:${version.sitemesh}",
        "org.apache.tiles:tiles-core:${version.tiles}",
        "org.apache.tiles:tiles-jsp:${version.tiles}",
        "org.apache.tiles:tiles-api:${version.tiles}",
        "org.apache.tiles:tiles-servlet:${version.tiles}",
        "org.apache.tiles:tiles-template:${version.tiles}"
    ],
    "etc" : [
        "org.ehcache:ehcache:3.0.0",
        "com.github.mlaccetti:javapns:2.3.2",
    ]
]

dependencies {
    providedCompile libs.servlet
    compile libs.web, libs.spring, libs.database, libs.logging, libs.json, libs.apacheCommons, libs.view, libs.etc
    compile group: 'commons-collections', name: 'commons-collections', version: '3.2'
    testCompile group: 'junit', name: 'junit', version: '4.+'
}

test {
    systemProperties 'property': 'value'
}

uploadArchives {
    repositories {
       flatDir {
           dirs 'repos'
       }
    }
}

war {
    archiveName = "${projectName}.war"
}